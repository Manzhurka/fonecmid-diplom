
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Данные = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ВКМ_Договор, "ВидДоговора, ВКМ_ДатаНачалаДействияДоговора, ВКМ_ДатаОкончанияДействияДоговора");
	Если Данные.ВидДоговора <> ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов.ВКМ_АбонентскоеОбслуживание") Тогда
		ОбщегоНазначения.СообщитьПользователю("Не выбран договор абонентского обслуживания");
		Отказ = Истина;
	КонецЕсли;
	Если Дата < Данные.ВКМ_ДатаНачалаДействияДоговора ИЛИ Дата > Данные.ВКМ_ДатаОкончанияДействияДоговора Тогда
		ОбщегоНазначения.СообщитьПользователю("Дата документа не входит в период действия договора");
		Отказ = Истина;
	КонецЕсли;
	
	ЧасоваяСтавка = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВКМ_Договор, "ВКМ_СтоимостьЧасаРаботы");
	ПроцентОтРабот = ПроцентОтРабот(ВКМ_Специалист);
	
	Если ПроцентОтРабот = Неопределено Тогда
		ОбщегоНазначения.СообщитьПользователю(СтрШаблон(
				"Сотруднику %1 не указан процент от работ в условиях оплаты.", ВКМ_Специалист));
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	// регистр ВКМ_ВыполненныеКлиентуРаботы
	Движения.ВКМ_ВыполненныеКлиентуРаботы.Записывать = Истина;
	Движение = Движения.ВКМ_ВыполненныеКлиентуРаботы.ДобавитьПриход();
	Движение.Период = Дата;
	Движение.ВКМ_Клиент = ВКМ_Клиент;
	Движение.ВКМ_Договор = ВКМ_Договор;
	КоличествоЧасов = 0;
	Для Каждого ТекСтрока из ВКМ_ВыполненныеРаботы Цикл
		КоличествоЧасов = КоличествоЧасов + ТекСтрока.ВКМ_ЧасыКОплатеКлиенту;
	КонецЦикла;
	Движение.ВКМ_КоличествоЧасов = КоличествоЧасов;
	Движение.ВКМ_СуммаКОплате = КоличествоЧасов * ЧасоваяСтавка;
	
	// регистр ВКМ_ВыполненныеСотрудникомРаботы 
	Движения.ВКМ_ВыполненныеСотрудникомРаботы.Записывать = Истина;
	Движение = Движения.ВКМ_ВыполненныеСотрудникомРаботы.Добавить();
	Движение.Период = Дата;
	Движение.ВКМ_Сотрудник = ВКМ_Специалист;
	Движение.ВКМ_ЧасовКОплате = КоличествоЧасов;
	Движение.ВКМ_СуммаКОплате = КоличествоЧасов * ЧасоваяСтавка * ПроцентОтРабот / 100;
		
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)

	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	Если ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "ВКМ_ДатаПроведенияРабот") <> ВКМ_ДатаПроведенияРабот
		Или ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "ВКМ_ВремяНачалаРабот") <> ВКМ_ВремяНачалаРабот
		Или ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "ВКМ_Специалист") <> ВКМ_Специалист Тогда
		ЗаказИзменен = Истина;
	Иначе
		ЗаказИзменен = Ложь;
	КонецЕсли;

	ДополнительныеСвойства.Вставить("ЗаказИзменен", ЗаказИзменен);
	ДополнительныеСвойства.Вставить("ЭтоНовый", ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);

КонецПроцедуры

Процедура ПриЗаписи(Отказ)

	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	Если ДополнительныеСвойства.ЭтоНовый Тогда
		ТекстСообщения = ТекстСообщения();
		Сообщение = СтрШаблон("Новый заказ №%1: " + ТекстСообщения, Номер);
		СозданиеЭлементаСправочника(Сообщение);
		
	ИначеЕсли ДополнительныеСвойства.ЗаказИзменен Тогда
		
		ТекстСообщения = ТекстСообщения();
		Сообщение = СтрШаблон("Изменен заказ №%1: " + ТекстСообщения, Номер);
		СозданиеЭлементаСправочника(Сообщение);

	КонецЕсли;

КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

Функция ТекстСообщения()
	
	ТекстСообщения = СтрШаблон("исполнитель %1, время проведения: %2 с %3 по %4", ВКМ_Специалист, Формат(ВКМ_ДатаПроведенияРабот, "ДЛФ=D"), 
			Формат(ВКМ_ВремяНачалаРабот, "ДЛФ=T"), Формат(ВКМ_ВремяОкончанияРабот, "ДЛФ=T"));
			
	Возврат ТекстСообщения; 
	
КонецФункции

Процедура СозданиеЭлементаСправочника(Сообщение)
	
	Элемент = Справочники.ВКМ_УведомленияТелеграмБоту.СоздатьЭлемент();
	Элемент.ВКМ_ТекстСообщения = Сообщение;
	Элемент.Записать();
	
КонецПроцедуры

Функция ПроцентОтРабот(Сотрудник);

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	               |	ВКМ_УсловияОплатыСотрудниковСрезПоследних.ВКМ_ПроцентОтРабот КАК ВКМ_ПроцентОтРабот
	               |ИЗ
	               |	РегистрСведений.ВКМ_УсловияОплатыСотрудников.СрезПоследних(, ВКМ_Сотрудник = &Сотрудник) КАК ВКМ_УсловияОплатыСотрудниковСрезПоследних";
	                
	Запрос.УстановитьПараметр("Сотрудник", Сотрудник);
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Если Результат.Количество() = 0 Тогда 
		Возврат Неопределено;
	Иначе  
		Возврат Результат[0].ВКМ_ПроцентОтРабот;
	КонецЕсли;
	
КонецФункции


#КонецОбласти

#КонецЕсли
