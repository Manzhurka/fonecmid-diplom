
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий  

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)

	Для Каждого Строка Из ОсновныеНачисления Цикл
		Если Строка.ДатаНачала > Строка.ДатаОкончания Тогда
			ОбщегоНазначения.СообщитьПользователю(СтрШаблон("В строке №%1 дата начала больше даты окончания",
				Строка.НомерСтроки));
			Отказ = Истина;
		КонецЕсли;

		Если Строка.ВидРасчета = ПланыВидовРасчета.ВКМ_ДополнительныеНачисления.ВКМ_ФиксированнаяПремия Тогда
			ОбщегоНазначения.СообщитьПользователю(СтрШаблон("Фиксированная премия не может быть создана данным документом (строка №%1)", Строка.НомерСтроки));
			Отказ = Истина;
		КонецЕсли; 
		
		Если Строка.ВидРасчета = ПланыВидовРасчета.ВКМ_ОсновныеНачисления.ВКМ_Оклад
			И Не ЗначениеЗаполнено(Строка.ГрафикРаботы) Тогда
			ОбщегоНазначения.СообщитьПользователю(СтрШаблон("Для оклада необходимо задать график работы"));
			Отказ = Истина;
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры


Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Движения.ВКМ_ВзаиморасчетыССотрудниками.Записывать = Истина;
	
	СформироватьДвижения(); 
	
	РасчитатьОклад();
	РасчитатьОтпуск(); 
	РасчитатьНДФЛ();
	
	СформироватьДвиженияВзаиморасчетыССотрудниками();
		
КонецПроцедуры


#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура СформироватьДвижения()
	
	Движения.ВКМ_ОсновныеНачисления.Записывать = Истина;
	Движения.ВКМ_ДополнительныеНачисления.Записывать = Истина; 
	Движения.ВКМ_Удержания.Записывать = Истина;
	
	//Регистр ВКМ_ОсновныеНачисления
	Для Каждого Строка Из ОсновныеНачисления Цикл 
		Если Строка.ВидРасчета = ПланыВидовРасчета.ВКМ_ДополнительныеНачисления.ВКМ_ПроцентОтРабот Тогда
			//Регистр ВКМ_ДополнительныеНачисления
			Движение = Движения.ВКМ_ДополнительныеНачисления.Добавить();
			Движение.Сотрудник = Строка.Сотрудник;
			Движение.ВидРасчета = Строка.ВидРасчета;
			Движение.ПериодРегистрации = НачалоМесяца(Дата);
			Движение.Результат = Строка.Показатель;
		Иначе 
			//Регистр ВКМ_ОсновныеНачисления	
			Движение = Движения.ВКМ_ОсновныеНачисления.Добавить();
			Движение.ВидРасчета = Строка.ВидРасчета;
			Движение.ПериодДействияНачало = Строка.ДатаНачала;
			Движение.ПериодДействияКонец = Строка.ДатаОкончания;
			Движение.ПериодРегистрации = НачалоМесяца(Дата);
			Движение.Сотрудник = Строка.Сотрудник;
			Движение.ГрафикРаботы = Строка.ГрафикРаботы;
			Если Строка.ВидРасчета = ПланыВидовРасчета.ВКМ_ОсновныеНачисления.ВКМ_Отпуск Тогда 
				Движение.БазовыйПериодНачало = НачалоМесяца(ДобавитьМесяц(Строка.ДатаНачала, -12));
		    	Движение.БазовыйПериодКонец = КонецМесяца(ДобавитьМесяц(Строка.ДатаОкончания, -1));
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Движения.ВКМ_ОсновныеНачисления.Записать();
	Движения.ВКМ_ДополнительныеНачисления.Записать();
		  
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВКМ_НачисленияЗарплатыОсновныеНачисления.Сотрудник КАК Сотрудник
	|ИЗ
	|	Документ.ВКМ_НачисленияЗарплаты.ОсновныеНачисления КАК ВКМ_НачисленияЗарплатыОсновныеНачисления
	|ГДЕ
	|	ВКМ_НачисленияЗарплатыОсновныеНачисления.Ссылка = &Ссылка
	|СГРУППИРОВАТЬ ПО
	|	ВКМ_НачисленияЗарплатыОсновныеНачисления.Сотрудник";

	Запрос.УстановитьПараметр("Ссылка", Ссылка);

	Выборка = Запрос.Выполнить().Выбрать();

	Пока Выборка.Следующий() Цикл
		Движение = Движения.ВКМ_Удержания.Добавить();
		Движение.ПериодРегистрации = Дата;
		Движение.ВидРасчета = ПланыВидовРасчета.ВКМ_Удержания.ВКМ_НДФЛ;
		Движение.Сотрудник = Выборка.Сотрудник;
		Движение.БазовыйПериодНачало = ДатаНачала;
		Движение.БазовыйПериодКонец = ДатаОкончания;
	КонецЦикла;
	
	Движения.ВКМ_Удержания.Записать();
	
КонецПроцедуры  

Процедура РасчитатьОклад()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ЕСТЬNULL(ВКМ_УсловияОплатыСотрудниковСрезПоследних.Оклад, 0) КАК Оклад,
	|	ВКМ_ОсновныеНачисленияДанныеГрафика.НомерСтроки КАК НомерСтроки,
	|	ВКМ_ОсновныеНачисленияДанныеГрафика.Сотрудник КАК Сотрудник,
	|	ВКМ_ОсновныеНачисленияДанныеГрафика.РабочихДнейФактическийПериодДействия КАК ОтработаноДней,
	|	ВКМ_ОсновныеНачисленияДанныеГрафика.РабочихДнейПериодДействия КАК ДнейПериодДействия
	|ИЗ
	|	РегистрРасчета.ВКМ_ОсновныеНачисления.ДанныеГрафика(Регистратор = &Ссылка
	|	И ВидРасчета = ЗНАЧЕНИЕ(ПланВидовРасчета.ВКМ_ОсновныеНачисления.ВКМ_Оклад)) КАК ВКМ_ОсновныеНачисленияДанныеГрафика
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВКМ_УсловияОплатыСотрудников.СрезПоследних(&Дата, Сотрудник В
	|			(ВЫБРАТЬ
	|				ВКМ_НачисленияЗарплатыОсновныеНачисления.Сотрудник КАК Сотрудник
	|			ИЗ
	|				Документ.ВКМ_НачисленияЗарплаты.ОсновныеНачисления КАК ВКМ_НачисленияЗарплатыОсновныеНачисления
	|			ГДЕ
	|				ВКМ_НачисленияЗарплатыОсновныеНачисления.Ссылка = &Ссылка)) КАК ВКМ_УсловияОплатыСотрудниковСрезПоследних
	|		ПО ВКМ_ОсновныеНачисленияДанныеГрафика.Сотрудник = ВКМ_УсловияОплатыСотрудниковСрезПоследних.Сотрудник";
	
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("Ссылка", Ссылка); 
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл 
		
		Движение = Движения.ВКМ_ОсновныеНачисления[Выборка.НомерСтроки - 1];
		Движение.ОтработаноДней = Выборка.ОтработаноДней;  
		
		Если Выборка.ДнейПериодДействия = Выборка.ОтработаноДней Тогда 
			Движение.Результат = Выборка.Оклад;
		Иначе
			Движение.Результат = (Выборка.Оклад / Выборка.ДнейПериодДействия) * Выборка.ОтработаноДней;
		КонецЕсли;
				
	КонецЦикла;
	
КонецПроцедуры  

Процедура РасчитатьОтпуск()

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
	|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.РезультатБаза, 0) КАК База,
	|	РАЗНОСТЬДАТ(ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.ПериодДействияНачало,
	|		ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.ПериодДействияКонец, ДЕНЬ) + 1 КАК ФактДней,
	|	ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.ОтработаноДнейБаза КАК ОтработаноДнейБаза,
	|	ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.БазовыйПериодНачало КАК БазовыйПериодНачало,
	|	ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.БазовыйПериодКонец КАК БазовыйПериодКонец,
	|	ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.Сотрудник КАК Сотрудник,
	|	ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.ПериодДействияНачало КАК ПериодДействияНачало,
	|	ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.ПериодДействияКонец КАК ПериодДействияКонец
	|ИЗ
	|	РегистрРасчета.ВКМ_ОсновныеНачисления.БазаВКМ_ОсновныеНачисления(&Измерения, &Измерения,, Регистратор = &Ссылка
	|	И ВидРасчета = ЗНАЧЕНИЕ(ПланВидовРасчета.ВКМ_ОсновныеНачисления.ВКМ_Отпуск)) КАК
	|		ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления";
	
	Измерения = Новый Массив;
	Измерения.Добавить("Сотрудник");
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Измерения", Измерения);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл 
		
		Движение = Движения.ВКМ_ОсновныеНачисления[Выборка.НомерСтроки - 1];
		ОтработаноДней = Выборка.ОтработаноДнейБаза; 
		ДнейОтпуска = (НачалоДня(Выборка.ПериодДействияКонец) - НачалоДня(Выборка.ПериодДействияНачало)) / 86400;
		Движение.Результат = Выборка.База / ОтработаноДней * ДнейОтпуска;
		
	КонецЦикла;
	
	Движения.ВКМ_ОсновныеНачисления.Записать(, Истина);

КонецПроцедуры

Процедура РасчитатьНДФЛ()
	
		Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВКМ_Удержания.НомерСтроки,
	|	ВКМ_УдержанияБазаВКМ_ОсновныеНачисления.РезультатБаза КАК ОснРезультатБаза
	|ПОМЕСТИТЬ ВТ_ОснУдерж
	|ИЗ
	|	РегистрРасчета.ВКМ_Удержания КАК ВКМ_Удержания
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_Удержания.БазаВКМ_ОсновныеНачисления(&Измерения, &Измерения, &Разрезы,
	|			Регистратор = &Регистратор
	|		И ВидРасчета = &ВидРасчета) КАК ВКМ_УдержанияБазаВКМ_ОсновныеНачисления
	|		ПО ВКМ_Удержания.НомерСтроки = ВКМ_УдержанияБазаВКМ_ОсновныеНачисления.НомерСтроки
	|ГДЕ
	|	ВКМ_Удержания.Регистратор = &Регистратор
	|	И ВКМ_Удержания.ВидРасчета = &ВидРасчета
	|	И ВКМ_УдержанияБазаВКМ_ОсновныеНачисления.РегистраторРазрез = &Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВКМ_Удержания.НомерСтроки,
	|	ВКМ_УдержанияБазаВКМ_ДополнительныеНачисления.РезультатБаза КАК ДопРезультатБаза
	|ПОМЕСТИТЬ ВТ_ДопУдерж
	|ИЗ
	|	РегистрРасчета.ВКМ_Удержания КАК ВКМ_Удержания
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_Удержания.БазаВКМ_ДополнительныеНачисления(&Измерения, &Измерения, &Разрезы,
	|			Регистратор = &Регистратор
	|		И ВидРасчета = &ВидРасчета) КАК ВКМ_УдержанияБазаВКМ_ДополнительныеНачисления
	|		ПО ВКМ_Удержания.НомерСтроки = ВКМ_УдержанияБазаВКМ_ДополнительныеНачисления.НомерСтроки
	|ГДЕ
	|	ВКМ_Удержания.Регистратор = &Регистратор
	|	И ВКМ_Удержания.ВидРасчета = &ВидРасчета
	|	И
	|		ТИПЗНАЧЕНИЯ(ВКМ_УдержанияБазаВКМ_ДополнительныеНачисления.РегистраторРазрез) <> ТИП(Документ.ВКМ_НачислениеФиксированнойПремии)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ОснУдерж.НомерСтроки,
	|	ЕСТЬNULL(ВТ_ОснУдерж.ОснРезультатБаза, 0) КАК ОснРезультатБаза,
	|	ЕСТЬNULL(ВТ_ДопУдерж.ДопРезультатБаза, 0) КАК ДопРезультатБаза
	|ИЗ
	|	ВТ_ОснУдерж КАК ВТ_ОснУдерж
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДопУдерж КАК ВТ_ДопУдерж
	|		ПО ВТ_ОснУдерж.НомерСтроки = ВТ_ДопУдерж.НомерСтроки";
	
	Измерения = Новый Массив;
	Измерения.Добавить("Сотрудник");

	Разрезы = Новый Массив;
	Разрезы.Добавить("Регистратор");

	Запрос.УстановитьПараметр("Измерения", Измерения);
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	Запрос.УстановитьПараметр("ВидРасчета", ПланыВидовРасчета.ВКМ_Удержания.ВКМ_НДФЛ);
	Запрос.УстановитьПараметр("Разрезы", Разрезы);

	Выборка = Запрос.Выполнить().Выбрать();

	Пока Выборка.Следующий() Цикл

		Движение = Движения.ВКМ_Удержания[Выборка.НомерСтроки - 1];
		Движение.Результат = (Выборка.ОснРезультатБаза + Выборка.ДопРезультатБаза) * 13 / 100;

	КонецЦикла;

	Движения.ВКМ_Удержания.Записать( , Истина);
	
КонецПроцедуры

Процедура СформироватьДвиженияВзаиморасчетыССотрудниками()
	
	Движения.ВКМ_ВзаиморасчетыССотрудниками.Записывать = Истина;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВКМ_ОсновныеНачисления.Сотрудник КАК СотрудникОснНач,
	|	СУММА(ВКМ_ОсновныеНачисления.Результат) КАК РезультатОснНач
	|ПОМЕСТИТЬ ВТ_ОсновныеНачисления
	|ИЗ
	|	РегистрРасчета.ВКМ_ОсновныеНачисления КАК ВКМ_ОсновныеНачисления
	|ГДЕ
	|	ВКМ_ОсновныеНачисления.Регистратор = &Ссылка
	|СГРУППИРОВАТЬ ПО
	|	ВКМ_ОсновныеНачисления.Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВКМ_ДополнительныеНачисления.Сотрудник КАК СотрудникДопНач,
	|	СУММА(ВКМ_ДополнительныеНачисления.Результат) КАК РезультатДопНач
	|ПОМЕСТИТЬ ВТ_ДополнительныеНачисления
	|ИЗ
	|	РегистрРасчета.ВКМ_ДополнительныеНачисления КАК ВКМ_ДополнительныеНачисления
	|ГДЕ
	|	ВКМ_ДополнительныеНачисления.Регистратор = &Ссылка
	|СГРУППИРОВАТЬ ПО
	|	ВКМ_ДополнительныеНачисления.Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВКМ_Удержания.Сотрудник КАК СотрудникУдержания,
	|	СУММА(ВКМ_Удержания.Результат) КАК РезультатУдержания
	|ПОМЕСТИТЬ ВТ_Удержания
	|ИЗ
	|	РегистрРасчета.ВКМ_Удержания КАК ВКМ_Удержания
	|ГДЕ
	|	ВКМ_Удержания.Регистратор = &Ссылка
	|СГРУППИРОВАТЬ ПО
	|	ВКМ_Удержания.Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВКМ_НачисленияЗарплатыОсновныеНачисления.Сотрудник КАК Сотрудник,
	|	ЕСТЬNULL(ВТ_ДополнительныеНачисления.РезультатДопНач, 0) КАК РезультатДопНач,
	|	ЕСТЬNULL(ВТ_ОсновныеНачисления.РезультатОснНач, 0) КАК РезультатОснНач,
	|	ЕСТЬNULL(ВТ_Удержания.РезультатУдержания, 0) КАК РезультатУдержания
	|ИЗ
	|	Документ.ВКМ_НачисленияЗарплаты.ОсновныеНачисления КАК ВКМ_НачисленияЗарплатыОсновныеНачисления
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОсновныеНачисления КАК ВТ_ОсновныеНачисления
	|		ПО ВКМ_НачисленияЗарплатыОсновныеНачисления.Сотрудник = ВТ_ОсновныеНачисления.СотрудникОснНач
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДополнительныеНачисления КАК ВТ_ДополнительныеНачисления
	|		ПО ВКМ_НачисленияЗарплатыОсновныеНачисления.Сотрудник = ВТ_ДополнительныеНачисления.СотрудникДопНач
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Удержания КАК ВТ_Удержания
	|		ПО ВКМ_НачисленияЗарплатыОсновныеНачисления.Сотрудник = ВТ_Удержания.СотрудникУдержания
	|ГДЕ
	|	ВКМ_НачисленияЗарплатыОсновныеНачисления.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);	
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Движение = Движения.ВКМ_ВзаиморасчетыССотрудниками.ДобавитьПриход();
		Движение.Период = Дата;
		Движение.Сотрудник = Выборка.Сотрудник;
		Сумма = Выборка.РезультатОснНач + Выборка.РезультатДопНач - Выборка.РезультатУдержания;
		Движение.Сумма = Сумма;		
	КонецЦикла;
	
	Движения.ВКМ_ВзаиморасчетыССотрудниками.Записать();
			
КонецПроцедуры

#КонецОбласти

#КонецЕсли

