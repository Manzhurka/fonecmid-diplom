
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий  

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)

	Для Каждого Строка Из ВКМ_ОсновныеНачисления Цикл
		Если Строка.ВКМ_ДатаНачала > Строка.ВКМ_ДатаОкончания Тогда
			ОбщегоНазначения.СообщитьПользователю(СтрШаблон("В строке №%1 дата начала больше даты окончания",
				Строка.НомерСтроки));
			Отказ = Истина;
		КонецЕсли;

		Если Строка.ВКМ_ВидРасчета = ПланыВидовРасчета.ВКМ_ДополнительныеНачисления.ВКМ_ФиксированнаяПремия Тогда
			ОбщегоНазначения.СообщитьПользователю(СтрШаблон("Фиксированная премия не может быть создана данным документом (строка №%1)", Строка.НомерСтроки));
			Отказ = Истина;
		КонецЕсли; 
		
		Если Строка.ВКМ_ВидРасчета = ПланыВидовРасчета.ВКМ_ОсновныеНачисления.ВКМ_Оклад
			И Не ЗначениеЗаполнено(Строка.ВКМ_ГрафикРаботы) Тогда
			ОбщегоНазначения.СообщитьПользователю(СтрШаблон("Для оклада необходимо задать график работы"));
			Отказ = Истина;
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры


Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Движения.ВКМ_ВзаиморасчетыССотрудниками.Записывать = Истина;
	
	ВКМ_СформироватьДвижения(); 
	
	ВКМ_РасчитатьОклад();
	ВКМ_РасчитатьОтпуск(); 
	ВКМ_РасчитатьНДФЛ();
	
	ВКМ_СформироватьДвиженияВзаиморасчетыССотрудниками();
		
КонецПроцедуры


#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ВКМ_СформироватьДвижения()
	
	Движения.ВКМ_ОсновныеНачисления.Записывать = Истина;
	Движения.ВКМ_ДополнительныеНачисления.Записывать = Истина; 
	Движения.ВКМ_Удержания.Записывать = Истина;
	
	//Регистр ВКМ_ОсновныеНачисления
	Для Каждого Строка Из ВКМ_ОсновныеНачисления Цикл 
		Если Строка.ВКМ_ВидРасчета = ПланыВидовРасчета.ВКМ_ДополнительныеНачисления.ВКМ_ПроцентОтРабот Тогда
			//Регистр ВКМ_ДополнительныеНачисления
			Движение = Движения.ВКМ_ДополнительныеНачисления.Добавить();
			Движение.ВКМ_Сотрудник = Строка.ВКМ_Сотрудник;
			Движение.ВидРасчета = Строка.ВКМ_ВидРасчета;
			Движение.ПериодРегистрации = НачалоМесяца(Дата);
			Движение.ВКМ_Результат = Строка.ВКМ_Показатель;
		Иначе 
			//Регистр ВКМ_ОсновныеНачисления	
			Движение = Движения.ВКМ_ОсновныеНачисления.Добавить();
			Движение.ВидРасчета = Строка.ВКМ_ВидРасчета;
			Движение.ПериодДействияНачало = Строка.ВКМ_ДатаНачала;
			Движение.ПериодДействияКонец = Строка.ВКМ_ДатаОкончания;
			Движение.ПериодРегистрации = НачалоМесяца(Дата);
			Движение.ВКМ_Сотрудник = Строка.ВКМ_Сотрудник;
			Движение.ВКМ_ГрафикРаботы = Строка.ВКМ_ГрафикРаботы;
			Если Строка.ВКМ_ВидРасчета = ПланыВидовРасчета.ВКМ_ОсновныеНачисления.ВКМ_Отпуск Тогда 
				Движение.БазовыйПериодНачало = НачалоМесяца(ДобавитьМесяц(Строка.ВКМ_ДатаНачала, -12));
		    	Движение.БазовыйПериодКонец = КонецМесяца(ДобавитьМесяц(Строка.ВКМ_ДатаОкончания, -1));
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Движения.ВКМ_ОсновныеНачисления.Записать();
	Движения.ВКМ_ДополнительныеНачисления.Записать();
		  
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВКМ_НачисленияЗарплатыВКМ_ОсновныеНачисления.ВКМ_Сотрудник КАК Сотрудник
	|ИЗ
	|	Документ.ВКМ_НачисленияЗарплаты.ВКМ_ОсновныеНачисления КАК ВКМ_НачисленияЗарплатыВКМ_ОсновныеНачисления
	|ГДЕ
	|	ВКМ_НачисленияЗарплатыВКМ_ОсновныеНачисления.Ссылка = &Ссылка
	|СГРУППИРОВАТЬ ПО
	|	ВКМ_НачисленияЗарплатыВКМ_ОсновныеНачисления.ВКМ_Сотрудник";

	Запрос.УстановитьПараметр("Ссылка", Ссылка);

	Выборка = Запрос.Выполнить().Выбрать();

	Пока Выборка.Следующий() Цикл
		Движение = Движения.ВКМ_Удержания.Добавить();
		Движение.ПериодРегистрации = Дата;
		Движение.ВидРасчета = ПланыВидовРасчета.ВКМ_Удержания.ВКМ_НДФЛ;
		Движение.ВКМ_Сотрудник = Выборка.Сотрудник;
		Движение.БазовыйПериодНачало = ВКМ_ДатаНачала;
		Движение.БазовыйПериодКонец = ВКМ_ДатаОкончания;
	КонецЦикла;
	
	Движения.ВКМ_Удержания.Записать();
	
КонецПроцедуры  

Процедура ВКМ_РасчитатьОклад()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЕСТЬNULL(ВКМ_УсловияОплатыСотрудниковСрезПоследних.ВКМ_Оклад, 0) КАК Оклад,
	               |	ВКМ_ОсновныеНачисленияДанныеГрафика.НомерСтроки КАК НомерСтроки,
	               |	ВКМ_ОсновныеНачисленияДанныеГрафика.ВКМ_Сотрудник КАК Сотрудник,
	               |	ВКМ_ОсновныеНачисленияДанныеГрафика.ВКМ_РабочихДнейФактическийПериодДействия КАК ОтработаноДней,
	               |	ВКМ_ОсновныеНачисленияДанныеГрафика.ВКМ_РабочихДнейПериодДействия КАК ДнейПериодДействия
	               |ИЗ
	               |	РегистрРасчета.ВКМ_ОсновныеНачисления.ДанныеГрафика(
	               |			Регистратор = &Ссылка
	               |				И ВидРасчета = ЗНАЧЕНИЕ(ПланВидовРасчета.ВКМ_ОсновныеНачисления.ВКМ_Оклад)) КАК ВКМ_ОсновныеНачисленияДанныеГрафика
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВКМ_УсловияОплатыСотрудников.СрезПоследних(
	               |				&Дата,
	               |				ВКМ_Сотрудник В
	               |					(ВЫБРАТЬ
	               |						ВКМ_НачисленияЗарплатыВКМ_ОсновныеНачисления.ВКМ_Сотрудник КАК ВКМ_Сотрудник
	               |					ИЗ
	               |						Документ.ВКМ_НачисленияЗарплаты.ВКМ_ОсновныеНачисления КАК ВКМ_НачисленияЗарплатыВКМ_ОсновныеНачисления
	               |					ГДЕ
	               |						ВКМ_НачисленияЗарплатыВКМ_ОсновныеНачисления.Ссылка = &Ссылка)) КАК ВКМ_УсловияОплатыСотрудниковСрезПоследних
	               |		ПО ВКМ_ОсновныеНачисленияДанныеГрафика.ВКМ_Сотрудник = ВКМ_УсловияОплатыСотрудниковСрезПоследних.ВКМ_Сотрудник";
	
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("Ссылка", Ссылка); 
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл 
		
		Движение = Движения.ВКМ_ОсновныеНачисления[Выборка.НомерСтроки - 1];
		Движение.ВКМ_ОтработаноДней = Выборка.ОтработаноДней;  
		
		Если Выборка.ДнейПериодДействия = Выборка.ОтработаноДней Тогда 
			Движение.ВКМ_Результат = Выборка.Оклад;
		Иначе
			Движение.ВКМ_Результат = (Выборка.Оклад / Выборка.ДнейПериодДействия) * Выборка.ОтработаноДней;
		КонецЕсли;
				
	КонецЦикла;
	
КонецПроцедуры  

Процедура ВКМ_РасчитатьОтпуск()

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
	               |	ЕСТЬNULL(ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.ВКМ_РезультатБаза, 0) КАК База,
	               |	РАЗНОСТЬДАТ(ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.ПериодДействияНачало, ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.ПериодДействияКонец, ДЕНЬ) + 1 КАК ФактДней,
	               |	ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.ВКМ_ОтработаноДнейБаза КАК ОтработаноДнейБаза,
	               |	ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.БазовыйПериодНачало КАК БазовыйПериодНачало,
	               |	ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.БазовыйПериодКонец КАК БазовыйПериодКонец,
	               |	ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.ВКМ_Сотрудник КАК Сотрудник,
	               |	ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.ПериодДействияНачало КАК ПериодДействияНачало,
	               |	ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.ПериодДействияКонец КАК ПериодДействияКонец
	               |ИЗ
	               |	РегистрРасчета.ВКМ_ОсновныеНачисления.БазаВКМ_ОсновныеНачисления(
	               |			&Измерения,
	               |			&Измерения,
	               |			,
	               |			Регистратор = &Ссылка
	               |				И ВидРасчета = ЗНАЧЕНИЕ(ПланВидовРасчета.ВКМ_ОсновныеНачисления.ВКМ_Отпуск)) КАК ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления";
	
	Измерения = Новый Массив;
	Измерения.Добавить("ВКМ_Сотрудник");
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Измерения", Измерения);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл 
		
		Движение = Движения.ВКМ_ОсновныеНачисления[Выборка.НомерСтроки - 1];
		ОтработаноДней = Выборка.ОтработаноДнейБаза; 
		ДнейОтпуска = (НачалоДня(Выборка.ПериодДействияКонец) - НачалоДня(Выборка.ПериодДействияНачало)) / 86400;
		Движение.ВКМ_Результат = Выборка.База / ОтработаноДней * ДнейОтпуска;
		
	КонецЦикла;
	
	Движения.ВКМ_ОсновныеНачисления.Записать(, Истина);

КонецПроцедуры

Процедура ВКМ_РасчитатьНДФЛ()
	
		Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВКМ_Удержания.НомерСтроки,
	|	ВКМ_УдержанияБазаВКМ_ОсновныеНачисления.ВКМ_РезультатБаза КАК ОснРезультатБаза
	|ПОМЕСТИТЬ ВТ_ОснУдерж
	|ИЗ
	|	РегистрРасчета.ВКМ_Удержания КАК ВКМ_Удержания
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_Удержания.БазаВКМ_ОсновныеНачисления(&Измерения, &Измерения, &Разрезы,
	|			Регистратор = &Регистратор
	|		И ВидРасчета = &ВидРасчета) КАК ВКМ_УдержанияБазаВКМ_ОсновныеНачисления
	|		ПО ВКМ_Удержания.НомерСтроки = ВКМ_УдержанияБазаВКМ_ОсновныеНачисления.НомерСтроки
	|ГДЕ
	|	ВКМ_Удержания.Регистратор = &Регистратор
	|	И ВКМ_Удержания.ВидРасчета = &ВидРасчета
	|	И ВКМ_УдержанияБазаВКМ_ОсновныеНачисления.РегистраторРазрез = &Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВКМ_Удержания.НомерСтроки,
	|	ВКМ_УдержанияБазаВКМ_ДополнительныеНачисления.ВКМ_РезультатБаза КАК ДопРезультатБаза
	|ПОМЕСТИТЬ ВТ_ДопУдерж
	|ИЗ
	|	РегистрРасчета.ВКМ_Удержания КАК ВКМ_Удержания
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_Удержания.БазаВКМ_ДополнительныеНачисления(&Измерения, &Измерения, &Разрезы,
	|			Регистратор = &Регистратор
	|		И ВидРасчета = &ВидРасчета) КАК ВКМ_УдержанияБазаВКМ_ДополнительныеНачисления
	|		ПО ВКМ_Удержания.НомерСтроки = ВКМ_УдержанияБазаВКМ_ДополнительныеНачисления.НомерСтроки
	|ГДЕ
	|	ВКМ_Удержания.Регистратор = &Регистратор
	|	И ВКМ_Удержания.ВидРасчета = &ВидРасчета
	|	И
	|		ТИПЗНАЧЕНИЯ(ВКМ_УдержанияБазаВКМ_ДополнительныеНачисления.РегистраторРазрез) <> ТИП(Документ.ВКМ_НачислениеФиксированнойПремии)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ОснУдерж.НомерСтроки,
	|	ЕСТЬNULL(ВТ_ОснУдерж.ОснРезультатБаза, 0) КАК ОснРезультатБаза,
	|	ЕСТЬNULL(ВТ_ДопУдерж.ДопРезультатБаза, 0) КАК ДопРезультатБаза
	|ИЗ
	|	ВТ_ОснУдерж КАК ВТ_ОснУдерж
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДопУдерж КАК ВТ_ДопУдерж
	|		ПО ВТ_ОснУдерж.НомерСтроки = ВТ_ДопУдерж.НомерСтроки";
	
	Измерения = Новый Массив;
	Измерения.Добавить("ВКМ_Сотрудник");

	Разрезы = Новый Массив;
	Разрезы.Добавить("Регистратор");

	Запрос.УстановитьПараметр("Измерения", Измерения);
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	Запрос.УстановитьПараметр("ВидРасчета", ПланыВидовРасчета.ВКМ_Удержания.ВКМ_НДФЛ);
	Запрос.УстановитьПараметр("Разрезы", Разрезы);

	Выборка = Запрос.Выполнить().Выбрать();

	Пока Выборка.Следующий() Цикл

		Движение = Движения.ВКМ_Удержания[Выборка.НомерСтроки - 1];
		Движение.ВКМ_Результат = (Выборка.ОснРезультатБаза + Выборка.ДопРезультатБаза) * 13 / 100;

	КонецЦикла;

	Движения.ВКМ_Удержания.Записать( , Истина);
	
КонецПроцедуры

Процедура ВКМ_СформироватьДвиженияВзаиморасчетыССотрудниками()
	
	Движения.ВКМ_ВзаиморасчетыССотрудниками.Записывать = Истина;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВКМ_ОсновныеНачисления.ВКМ_Сотрудник КАК СотрудникОснНач,
	|	СУММА(ВКМ_ОсновныеНачисления.ВКМ_Результат) КАК РезультатОснНач
	|ПОМЕСТИТЬ ВТ_ОсновныеНачисления
	|ИЗ
	|	РегистрРасчета.ВКМ_ОсновныеНачисления КАК ВКМ_ОсновныеНачисления
	|ГДЕ
	|	ВКМ_ОсновныеНачисления.Регистратор = &Ссылка
	|СГРУППИРОВАТЬ ПО
	|	ВКМ_ОсновныеНачисления.ВКМ_Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВКМ_ДополнительныеНачисления.ВКМ_Сотрудник КАК СотрудникДопНач,
	|	СУММА(ВКМ_ДополнительныеНачисления.ВКМ_Результат) КАК РезультатДопНач
	|ПОМЕСТИТЬ ВТ_ДополнительныеНачисления
	|ИЗ
	|	РегистрРасчета.ВКМ_ДополнительныеНачисления КАК ВКМ_ДополнительныеНачисления
	|ГДЕ
	|	ВКМ_ДополнительныеНачисления.Регистратор = &Ссылка
	|СГРУППИРОВАТЬ ПО
	|	ВКМ_ДополнительныеНачисления.ВКМ_Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВКМ_НачисленияЗарплатыВКМ_ОсновныеНачисления.ВКМ_Сотрудник КАК Сотрудник,
	|	ЕСТЬNULL(ВТ_ДополнительныеНачисления.РезультатДопНач, 0) КАК РезультатДопНач,
	|	ЕСТЬNULL(ВТ_ОсновныеНачисления.РезультатОснНач, 0) КАК РезультатОснНач
	|ИЗ
	|	Документ.ВКМ_НачисленияЗарплаты.ВКМ_ОсновныеНачисления КАК ВКМ_НачисленияЗарплатыВКМ_ОсновныеНачисления
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОсновныеНачисления КАК ВТ_ОсновныеНачисления
	|		ПО ВКМ_НачисленияЗарплатыВКМ_ОсновныеНачисления.ВКМ_Сотрудник = ВТ_ОсновныеНачисления.СотрудникОснНач
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДополнительныеНачисления КАК ВТ_ДополнительныеНачисления
	|		ПО ВКМ_НачисленияЗарплатыВКМ_ОсновныеНачисления.ВКМ_Сотрудник = ВТ_ДополнительныеНачисления.СотрудникДопНач
	|ГДЕ
	|	ВКМ_НачисленияЗарплатыВКМ_ОсновныеНачисления.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);	
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Движение = Движения.ВКМ_ВзаиморасчетыССотрудниками.ДобавитьПриход();
		Движение.Период = Дата;
		Движение.ВКМ_Сотрудник = Выборка.Сотрудник;
		Сумма = Выборка.РезультатОснНач + Выборка.РезультатДопНач;
		Движение.ВКМ_Сумма = Сумма * 0.87;		
	КонецЦикла;
	
	Движения.ВКМ_ВзаиморасчетыССотрудниками.Записать();
			
КонецПроцедуры

#КонецОбласти

#КонецЕсли

