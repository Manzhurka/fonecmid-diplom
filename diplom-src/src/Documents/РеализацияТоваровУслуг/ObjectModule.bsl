
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Ответственный = Пользователи.ТекущийПользователь();
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказПокупателя") Тогда
		ЗаполнитьНаОснованииЗаказаПокупателя(ДанныеЗаполнения);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	СуммаДокумента = Товары.Итог("Сумма") + Услуги.Итог("Сумма");
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)

	Движения.ОбработкаЗаказов.Записывать = Истина;
	Движения.ОстаткиТоваров.Записывать = Истина;
	
	Движение = Движения.ОбработкаЗаказов.Добавить();
	Движение.Период = Дата;
	Движение.Контрагент = Контрагент;
	Движение.Договор = Договор;
	Движение.Заказ = Основание;
	Движение.СуммаОтгрузки = СуммаДокумента;

	Для Каждого ТекСтрокаТовары Из Товары Цикл
		Движение = Движения.ОстаткиТоваров.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.Контрагент = Контрагент;
		Движение.Номенклатура = ТекСтрокаТовары.Номенклатура;
		Движение.Сумма = ТекСтрокаТовары.Сумма;
		Движение.Количество = ТекСтрокаТовары.Количество;
	КонецЦикла;
	
	// регистр накопления ВыполненныеКлиентуРаботы
	Движения.ВКМ_ВыполненныеКлиентуРаботы.Записывать = Истина;
	РаботыСпециалиста = Константы.ВКМ_НоменклатураРаботыСпециалиста.Получить();
	Для Каждого ТекСтрокаУслуги Из Услуги Цикл
		Если ТекСтрокаУслуги.Номенклатура = РаботыСпециалиста Тогда
			Движение = Движения.ВКМ_ВыполненныеКлиентуРаботы.ДобавитьРасход();
			Движение.Период = Дата;
			Движение.ВКМ_Клиент = Контрагент;
			Движение.ВКМ_Договор = Договор;
			Движение.ВКМ_КоличествоЧасов = ТекСтрокаУслуги.Количество;
			Движение.ВКМ_СуммаКОплате = ТекСтрокаУслуги.Сумма;
		КонецЕсли;
	КонецЦикла;	

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьНаОснованииЗаказаПокупателя(ДанныеЗаполнения)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗаказПокупателя.Организация КАК Организация,
	               |	ЗаказПокупателя.Контрагент КАК Контрагент,
	               |	ЗаказПокупателя.Договор КАК Договор,
	               |	ЗаказПокупателя.СуммаДокумента КАК СуммаДокумента,
	               |	ЗаказПокупателя.Товары.(
	               |		Ссылка КАК Ссылка,
	               |		НомерСтроки КАК НомерСтроки,
	               |		Номенклатура КАК Номенклатура,
	               |		Количество КАК Количество,
	               |		Цена КАК Цена,
	               |		Сумма КАК Сумма
	               |	) КАК Товары,
	               |	ЗаказПокупателя.Услуги.(
	               |		Ссылка КАК Ссылка,
	               |		НомерСтроки КАК НомерСтроки,
	               |		Номенклатура КАК Номенклатура,
	               |		Количество КАК Количество,
	               |		Цена КАК Цена,
	               |		Сумма КАК Сумма
	               |	) КАК Услуги
	               |ИЗ
	               |	Документ.ЗаказПокупателя КАК ЗаказПокупателя
	               |ГДЕ
	               |	ЗаказПокупателя.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Не Выборка.Следующий() Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
	
	ТоварыОснования = Выборка.Товары.Выбрать();
	Пока ТоварыОснования.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Товары.Добавить(), ТоварыОснования);
	КонецЦикла;
	
	УслугиОснования = Выборка.Услуги.Выбрать();
	Пока ТоварыОснования.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Услуги.Добавить(), УслугиОснования);
	КонецЦикла;
	
	Основание = ДанныеЗаполнения;
	
КонецПроцедуры

//ВКМ Кузьмина М.Н.++
// автозаполнение таблицы услуги
Процедура ВКМ_ВыполнитьАвтозаполнение() Экспорт

	АбонентскаяПлата = Константы.ВКМ_НоменклатураАбонентскаяПлата.Получить();
	РаботыСпециалиста = Константы.ВКМ_НоменклатураРаботыСпециалиста.Получить();

	Если Не ЗначениеЗаполнено(АбонентскаяПлата) Тогда
		ОбщегоНазначения.СообщитьПользователю("Абонентская плата не заполнена");
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(РаботыСпециалиста) Тогда
		ОбщегоНазначения.СообщитьПользователю("Работы специалиста не заполнены");
		Возврат;
	КонецЕсли;

	Услуги.Очистить();

	Если ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Договор, "ВКМ_СуммаАбонентскойПлаты") <> 0 Тогда
		Если ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Договор, "ВКМ_ДатаНачалаДействияДоговора") < КонецМесяца(Дата)
			И ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Договор, "ВКМ_ДатаОкончанияДействияДоговора") > НачалоМесяца(Дата) Тогда
			НоваяСтрока = Услуги.Добавить();
			НоваяСтрока.Номенклатура = АбонентскаяПлата;
			НоваяСтрока.Цена = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Договор, "ВКМ_СуммаАбонентскойПлаты");
			НоваяСтрока.Количество = 1;
			НоваяСтрока.Сумма = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Договор, "ВКМ_СуммаАбонентскойПлаты");
		Иначе
			ОбщегоНазначения.СообщитьПользователю("Выбранный договор не действует в этом месяце");
		КонецЕсли;
	КонецЕсли;

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВКМ_ВыполненныеКлиентуРаботыОбороты.ВКМ_Договор.Представление КАК Договор,
	|	ЕСТЬNULL(ВКМ_ВыполненныеКлиентуРаботыОбороты.ВКМ_КоличествоЧасовОборот, 0) КАК КоличествоЧасов,
	|	ЕСТЬNULL(ВКМ_ВыполненныеКлиентуРаботыОбороты.ВКМ_СуммаКОплатеОборот, 0) КАК СуммаКОплате,
	|	ВКМ_ВыполненныеКлиентуРаботыОбороты.Период КАК Период
	|ИЗ
	|	РегистрНакопления.ВКМ_ВыполненныеКлиентуРаботы.Обороты(НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ), КОНЕЦПЕРИОДА(&Период, МЕСЯЦ),
	|		Месяц, ВКМ_Договор = &Договор) КАК ВКМ_ВыполненныеКлиентуРаботыОбороты";
	
	Запрос.УстановитьПараметр("Договор", Договор);
	Запрос.УстановитьПараметр("Период", Дата);

	ВыполненныеРаботы = Запрос.Выполнить().Выгрузить();
	Если ВыполненныеРаботы.Количество() <> 0 Тогда
		НоваяСтрока = Услуги.Добавить();
		НоваяСтрока.Номенклатура = РаботыСпециалиста;
		НоваяСтрока.Количество = ВыполненныеРаботы[0].КоличествоЧасов;
		НоваяСтрока.Сумма = ВыполненныеРаботы[0].СуммаКОплате;
		Если ВыполненныеРаботы[0].КоличествоЧасов <> 0 Тогда	
			НоваяСтрока.Цена = ВыполненныеРаботы[0].СуммаКОплате / ВыполненныеРаботы[0].КоличествоЧасов;
		КонецЕсли;	
	КонецЕсли;

	СуммаДокумента = Товары.Итог("Сумма") + Услуги.Итог("Сумма");
КонецПроцедуры 
//ВКМ Кузьмина М.Н.--

#КонецОбласти

#КонецЕсли
